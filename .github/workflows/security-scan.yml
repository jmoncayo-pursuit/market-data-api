name: Security Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run security scans weekly
    - cron: "0 2 * * 1"

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      - name: Run Bandit security scan
        run: |
          bandit -r app/ -f json -o bandit-report.json || true
          bandit -r app/ -f txt -o bandit-report.txt || true

      - name: Run Safety check
        run: |
          safety --version
          safety check --output json > safety-report.json || true
          safety check --full-report || true

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always() && github.event_name != 'pull_request'
        continue-on-error: true
        with:
          sarif_file: "trivy-results.sarif"

      - name: Comment PR with security findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## Security Scan Results\n\n';

            // Add Bandit results if available
            if (fs.existsSync('bandit-report.txt')) {
              const banditReport = fs.readFileSync('bandit-report.txt', 'utf8');
              comment += '### Bandit Security Scan\n```\n' + banditReport + '\n```\n\n';
            }

            // Add Safety results if available
            if (fs.existsSync('safety-report.json')) {
              const safetyReport = JSON.parse(fs.readFileSync('safety-report.json', 'utf8'));
              if (safetyReport.length > 0) {
                comment += '### Safety Check - Vulnerable Dependencies\n';
                safetyReport.forEach(vuln => {
                  comment += `- **${vuln.package}**: ${vuln.vulnerability_id} - ${vuln.advisory}\n`;
                });
                comment += '\n';
              }
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
